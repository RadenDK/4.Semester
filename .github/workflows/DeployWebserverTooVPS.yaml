name: Deploy FoosballProLeague Webserver to DigitalOcean

on:
  push:
    branches:
        - main
    paths:
      - 'FoosballProLeague.Webserver/**'  # Only trigger when the Webserver code changes
      
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx to enable advanced Docker features
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Build the Docker image for the FoosballProLeague Webserver
      - name: Build Docker Image
        run: docker build -t foosballproleague-webserver:latest ./FoosballProLeague.Webserver

      # Step 4: Save the Docker image as a tar file for easy transfer
      - name: Save Docker image as tar file
        run: docker save foosballproleague-webserver:latest -o foosballproleague-webserver.tar

      # Step 5: Set permissions for the tar file (ensuring it's accessible)
      - name: Set permissions for TAR file
        run: chmod 755 foosballproleague-webserver.tar

      # Step 6: Copy the Docker image tar file to the DigitalOcean droplet
      - name: Copy image to DigitalOcean
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DIGITAL_OCEAN_IP }}
          username: ${{ secrets.DIGITAL_OCEAN_USER }}
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          source: foosballproleague-webserver.tar
          target: /root/

      # Step 7: SSH into the DigitalOcean droplet and deploy the Docker image
      - name: SSH into DigitalOcean and deploy Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITAL_OCEAN_IP }}
          username: ${{ secrets.DIGITAL_OCEAN_USER }}
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          script: |
            docker load -i /root/foosballproleague-webserver.tar  # Load the Docker image from the tar file
            docker images  # List available images
            docker ps -a  # List all containers, even stopped ones
            docker stop foosballproleague-webserver-container || true  # Stop any existing container
            docker rm foosballproleague-webserver-container || true    # Remove the container if it exists
            docker run -d -p 5000:5000 \
            --name foosballproleague-webserver-container \
            -e HttpClientSettings__BaseAddress="${{ secrets.BASE_API_URL }}" \
            -e ApiKey="${{ secrets.X_API_KEY }}" \
            foosballproleague-webserver:latest


      # Optional Step 8: Clean up tar files from the server after deployment
      - name: Clean up tar files on DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITAL_OCEAN_IP }}
          username: ${{ secrets.DIGITAL_OCEAN_USER }}
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          script: |
            rm -f /root/foosballproleague-webserver.tar
