@model List<FoosballProLeague.Webserver.Models.UserModel>

@{
    Layout = "_Layout";
    var mode = ViewBag.Mode as string ?? "1v1";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FoosballProLeague</title>
    <link rel="stylesheet" href="~/css/HomePage.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js" integrity="sha512-7SRCYIJtR6F8ocwW7UxW6wGKqbSyqREDbfCORCbGLatU0iugBLwyOXpzhkPyHIFdBO0K2VCu57fvP2Twgx1o2A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="~/js/homepage.js"></script>
    <link rel="stylesheet" href="~/css/layout.css">
</head>
<body>
<main class="main">
    <section class="leaderboard-section">
        <div class="leaderboard">
            <div class="leaderboard-header">
                <h2>Leaderboard</h2>
                <a href="#" class="elo-button @(mode == "1v1" ? "active" : "")" data-mode="1v1" onclick="foosballProLeague.fetchLeaderboard('1v1')">1v1</a>
                <a href="#" class="elo-button @(mode == "2v2" ? "active" : "")" data-mode="2v2" onclick="foosballProLeague.fetchLeaderboard('2v2')">2v2</a>
            </div>
            <table>
                <thead>
                <tr>
                    <th>Rank</th>
                    <th>Name</th>
                    <th>Elo</th>
                </tr>
                </thead>
                <tbody id="leaderboardBody">
                <tr>
                    <td colspan="3">Loading...</td>
                </tr>
                </tbody>
            </table>
            <div class="pagination">
                <a href="#" class="previous-page">Previous</a>
                <span>Page 1</span>
                <a href="#" class="next-page">Next</a>
            </div>
        </div>
    </section>
    <section class="match-section">
        <section class="ongoing-match-section">
            <div class="ongoing-match">
                <h2>Ongoing match</h2>
                <div class="match-info">
                    <div class="match-time"></div>
                    <div class="match-team">
                        <span class="team-red">Team Red</span>
                    </div>
                    <div class="match-score">
                        <span class="score"></span>
                        <span class="dash"> - </span>
                        <span class="score"></span>
                    </div>
                    <div class="match-team">
                        <span class="team-blue">Team Blue</span>
                    </div>
                </div>
            </div>
        </section>
        <section class="match-history-section">
            <div class="match-history">
                <h2>Match history</h2>
                <div class="history-item">
                    <span class="match">Carl vs Olivier</span> <span class="score">10 - 4</span> <span class="points">10 pt</span>
                </div>
            </div>
        </section>
    </section>
</main>
<script>
    let foosballProLeague;

    document.addEventListener('DOMContentLoaded', () => {
        fetch('/config/url')
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(config => {
                console.log("Config: ", config);
                const apiUrl = config.apiUrl;
                foosballProLeague = new FoosballProLeague(apiUrl);
                foosballProLeague.fetchLeaderboard('@mode'); // Fetch initial leaderboard
            })
            .catch(error => console.error('Error fetching configuration:', error));
    });
</script>
</body>
</html>