name: Deploy FoosballProLeague API to DigitalOcean

on:
  push:
    branches:
      - main
     paths:
       - 'FoosballProLeague.Api/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore FoosballProLeague.Api/FoosballProLeague.Api/FoosballProLeague.Api.csproj

      - name: Build project
        run: dotnet build FoosballProLeague.Api/FoosballProLeague.Api/FoosballProLeague.Api.csproj --configuration Release

      - name: Create appsettings.test.json
        run: |
          echo '{
            "ConnectionStrings": {
              "DatabaseConnection": "${{ secrets.TEST_DATABASE_CONNECTION }}"
            },
            "ApiKey": "very_secure_api_key",
            "Jwt": {
              "SigningKey": "very_secure_signing_key_that_is_long_enough"
            }
          }' > FoosballProLeague.Api/FoosballProLeague.Api.Tests/appsettings.test.json

       - name: Run tests
         run: dotnet test FoosballProLeague.Api/FoosballProLeague.Api.Tests/FoosballProLeague.Api.Tests.csproj --verbosity normal

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        run: docker build -t foosballproleague-api:latest ./FoosballProLeague.Api

      - name: Save Docker image as tar file
        run: docker save foosballproleague-api:latest -o foosballproleague-api.tar

      - name: Set permissions for TAR file
        run: chmod 755 foosballproleague-api.tar

      - name: Pre-deployment cleanup on DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITAL_OCEAN_IP }}
          username: ${{ secrets.DIGITAL_OCEAN_USER }}
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          script: |
            echo "Performing pre-deployment cleanup..."
            if [ -f /root/foosballproleague-api.tar ]; then
              echo "Existing tarball found. Removing it."
              rm -f /root/foosballproleague-api.tar
            fi
            docker stop foosballproleague-api-container || true
            docker rm foosballproleague-api-container || true
            docker rmi foosballproleague-api:latest || true

      - name: Copy image to DigitalOcean
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DIGITAL_OCEAN_IP }}
          username: ${{ secrets.DIGITAL_OCEAN_USER }}
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          source: "foosballproleague-api.tar"
          target: "/root/"

      - name: Debug file transfer and Docker images on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITAL_OCEAN_IP }}
          username: ${{ secrets.DIGITAL_OCEAN_USER }}
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          script: |
            echo "Checking if tarball exists and its size..."
            if [ -f /root/foosballproleague-api.tar ]; then
              echo "Docker image tarball found at /root/foosballproleague-api.tar"
              ls -lh /root/foosballproleague-api.tar
            else
              echo "Docker image tarball not found!"
              exit 1
            fi

            echo "Debugging files in /root directory:"
            ls -l /root

            echo "Debugging Docker images before loading:"
            docker images

            echo "Loading the Docker image..."
            docker load -i /root/foosballproleague-api.tar

            echo "Debugging Docker images after loading:"
            docker images

      - name: Deploy Docker image on DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITAL_OCEAN_IP }}
          username: ${{ secrets.DIGITAL_OCEAN_USER }}
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          script: |
            docker load -i /root/foosballproleague-api.tar
            echo "Stopping any existing containers..."
            docker stop foosballproleague-api-container || true
            docker rm foosballproleague-api-container || true
            echo "Running new container..."
            docker run -d -p 5001:5001 \
            --name foosballproleague-api-container \
            -e ConnectionStrings__DatabaseConnection="${{ secrets.DATABASE_CONNECTION_STRING }}" \
            -e ApiKey="${{ secrets.X_API_KEY }}" \
            -e Jwt__SigningKey="${{ secrets.JWT_SIGNING_KEY }}" \
            foosballproleague-api:latest

      - name: Post-deployment cleanup on DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITAL_OCEAN_IP }}
          username: ${{ secrets.DIGITAL_OCEAN_USER }}
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          script: |
            echo "Cleaning up tarball from the server..."
            rm -f /root/foosballproleague-api.tar
